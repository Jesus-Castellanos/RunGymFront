@model List<RunGymFront.Models.Ejercicios>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Gestión de Ejercicios";
}

<title>@ViewData["Title"]</title>

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">Gestión de Ejercicios</h2>
        <a href="@Url.Action("AgregarEjercicios", "Ejercicios")" class="btn btn-success">
            <i class="fas fa-plus"></i> Agregar Nuevo Ejercicio
        </a>
    </div>

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-info text-center" role="alert">
            No hay ejercicios registrados. ¡Empieza agregando uno!
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-bordered table-striped align-middle">
                <thead class="table-dark">
                    <tr>
                        <th>Imagen</th>
                        <th>Categoría</th>
                        <th style="width: 150px;">Acciones</th>
                    </tr>
                </thead>
                <tbody id="exerciseTableBody">
                    @foreach (var ejercicio in Model)
                    {
                        <tr id="exercise-@ejercicio.Id">
                            <td data-label="Imagen">
                                <a href="@Url.Action("Detalle", "Ejercicios", new { Id = ejercicio.Id })" target="_blank">
                                    <img src="@ejercicio.ImagenURL" alt="Imagen de @ejercicio.Categoria" class="img-fluid" style="max-width: 80px;" />
                                </a>
                            </td>
                            <td data-label="Categoría" class="categoria">@ejercicio.Categoria</td>
                            <td data-label="Acciones">
                                <div class="btn-group" role="group" aria-label="Acciones de Ejercicio">

                                    <div class="action-buttons">
                                        <a href="@Url.Action("EditarEjercicios", "Ejercicios")" class="btn-edit">
                                            <i class="fas fa-edit me-2"></i>Editar Perfil
                                        </a>
                                        <button type="button" class="btn-delete" data-bs-toggle="modal" data-bs-target="#deleteModal">
                                            <i class="fas fa-trash-alt me-2"></i>Eliminar Cuenta
                                        </button>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel"><i class="fas fa-exclamation-triangle me-2"></i>Confirmar Eliminación</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>¿Estás seguro que deseas eliminar tu cuenta permanentemente?</p>
                <p class="text-danger"><strong>Esta acción no se puede deshacer y se perderán todos tus datos.</strong></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                @using (Html.BeginForm("EliminarConfirmado", "Perfil", FormMethod.Post, new { @class = "d-inline" }))
                {
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash-alt me-2"></i>Sí, Eliminar
                    </button>
                }
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });

        var btn = document.getElementById('confirmDeleteBtn');
        if (btn) {
            btn.addEventListener('click', function () {
                document.getElementById('deleteForm').submit();
            });
        }

        // Display any alerts
        if (document.querySelector('.alert')) {
            setTimeout(function () {
                var alert = bootstrap.Alert.getOrCreateInstance(document.querySelector('.alert'));
                alert.close();
            }, 5000);
        }
    });
</script>
