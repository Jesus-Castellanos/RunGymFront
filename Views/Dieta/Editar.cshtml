@model RunGymFront.Models.Dieta

@{
    ViewData["Title"] = "Editar Dieta";
}

<style>
    :root {
        --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --secondary-gradient: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        --accent-color: #9f7aea;
        --dark-purple: #553c9a;
        --light-purple: #d6bcfa;
        --success-green: #48bb78;
        --warning-orange: #ed8936;
        --danger-red: #f56565;
        --text-dark: #2d3748;
        --text-light: #f8fafc;
    }

    .edit-dieta-container {
        font-family: 'Poppins', 'Segoe UI', sans-serif;
        max-width: 900px;
        margin: 3rem auto;
        padding: 0 2rem;
    }

    .edit-dieta-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        background: var(--primary-gradient);
        padding: 1.5rem 2rem;
        border-radius: 12px;
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }

    .edit-dieta-title {
        color: white;
        font-weight: 700;
        font-size: 2.2rem;
        margin: 0;
        text-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .edit-dieta-card {
        background: white;
        border-radius: 16px;
        padding: 2.5rem;
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        margin-bottom: 2rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 600;
        color: var(--dark-purple);
        font-size: 1rem;
    }

    .form-control {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 2px solid #e2e8f0;
        border-radius: 10px;
        font-size: 1rem;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

        .form-control:focus {
            border-color: var(--accent-color);
            box-shadow: 0 0 0 3px rgba(159, 122, 234, 0.3);
            outline: none;
        }

    .textarea-control {
        min-height: 120px;
        resize: vertical;
    }

    .btn-container {
        display: flex;
        justify-content: flex-end;
        gap: 1rem;
        margin-top: 2rem;
    }

    .btn {
        padding: 0.8rem 1.5rem;
        border-radius: 10px;
        font-weight: 600;
        font-size: 1rem;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        cursor: pointer;
        border: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

    .btn-primary {
        background: var(--accent-color);
        color: white;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

        .btn-primary:hover {
            background: var(--dark-purple);
            transform: translateY(-2px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
        }

    .btn-secondary {
        background: #e2e8f0;
        color: var(--text-dark);
    }

        .btn-secondary:hover {
            background: #cbd5e0;
            transform: translateY(-2px);
        }

    .emoji-btn {
        margin-right: 8px;
        font-size: 1.1rem;
    }

    .validation-message {
        color: var(--danger-red);
        font-size: 0.85rem;
        margin-top: 0.5rem;
        display: block;
    }

    /* Animaciones */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .edit-dieta-card {
        animation: fadeInUp 0.5s ease forwards;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .edit-dieta-container {
            padding: 0 1rem;
        }

        .edit-dieta-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
            padding: 1.5rem;
        }

        .edit-dieta-card {
            padding: 1.5rem;
        }

        .btn-container {
            flex-direction: column;
        }

        .btn {
            width: 100%;
        }
    }
</style>

<div class="edit-dieta-container">
    @Html.AntiForgeryToken()
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            <strong>Corrige los siguientes errores:</strong>
            <ul class="mb-0 mt-2">
                @foreach (var state in ViewData.ModelState)
                {
                    foreach (var error in state.Value.Errors)
                    {
                        <li>@error.ErrorMessage</li>
                    }
                }
            </ul>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @using (Html.BeginForm("Editar", "Perfil", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()

        <div class="edit-dieta-card">
            <form asp-action="EditarDietas" method="post">
                <input type="hidden" asp-for="Id" />

                <div class="form-group">
                    <label asp-for="Desayuno" class="form-label">Desayuno</label>
                    @Html.TextBoxFor(m => m.Desayuno, new { @class = "form-control", placeholder = "Nombre", required = "required" })

                    <textarea asp-for="Desayuno" class="form-control textarea-control" rows="3"></textarea>
                    <span asp-validation-for="Desayuno" class="validation-message"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Almuerzo" class="form-label">Almuerzo</label>
                    @Html.TextBoxFor(m => m.Almuerzo, new { @class = "form-control", placeholder = "Nombre", required = "required" })

                    <textarea asp-for="Almuerzo" class="form-control textarea-control" rows="3"></textarea>
                    <span asp-validation-for="Almuerzo" class="validation-message"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Cena" class="form-label">Cena</label>
                    @Html.TextBoxFor(m => m.Cena, new { @class = "form-control", placeholder = "Nombre", required = "required" })

                    <textarea asp-for="Cena" class="form-control textarea-control" rows="3"></textarea>
                    <span asp-validation-for="Cena" class="validation-message"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Snacks" class="form-label">Snacks</label>
                    @Html.TextBoxFor(m => m.Snacks, new { @class = "form-control", placeholder = "Nombre", required = "required" })

                    <textarea asp-for="Snacks" class="form-control textarea-control" rows="3"></textarea>
                    <span asp-validation-for="Snacks" class="validation-message"></span>
                </div>

                <div class="btn-container">
                    <a href="@Url.Action("Index")" class="btn btn-secondary">
                        <span class="emoji-btn">↩️</span> Cancelar
                    </a>
                    <button type="submit" class="btn btn-primary">
                        <span class="emoji-btn">💾</span> Guardar Cambios
                    </button>
                </div>
            </form>
        </div>
    }
</div>

@section Scripts {

}